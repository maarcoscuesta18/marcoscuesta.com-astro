---
interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const {
	title = 'Marcos Cuesta: Personal Site',
	description = 'The personal site of Marcos Cuesta',
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta property="twitter:image" content="/profile.webp">
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:title" content="Marcos Cuesta: Personal Site">
<meta property="twitter:description" content="Welcome to the personal site of Marcos Cuesta, where you can find information about my portfolio and projects.">
<meta property="og:image" content="/profile.webp">
<meta property="og:title" content="Marcos Cuesta: Personal Site">
<meta property="og:description" content="Welcome to the personal site of Marcos Cuesta, where you can find information about my portfolio and projects." />
<meta property="og:url" content="marcoscuesta.com">
<meta name="generator" content={Astro.generator} />
<title>{title}</title>
<!--<ViewTransitions />-->
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<script is:inline>
	// This code is inlined in the head to make dark mode instant & blocking.
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('theme-dark');

	if (typeof localStorage !== 'undefined') {
		// Watch the document element and persist user preference when it changes.
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('theme-dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>