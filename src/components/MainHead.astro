---
import { ViewTransitions } from 'astro:transitions';
import  SpeedInsights  from "@vercel/speed-insights/astro"
import Analytics from '@vercel/analytics/astro'
interface Props {
	title?: string | undefined;
	description?: string | undefined;
}


const {description,title} = Astro.props;

---
<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta property="twitter:image" content="/profile.webp">
<meta property="twitter:card" content="summary_large_image">
<meta property="twitter:title" content="Marcos Cuesta: Personal Site">
<meta property="twitter:description" content="Welcome to the personal site of Marcos Cuesta, where you can find information about my portfolio and projects.">
<meta property="og:image" content="/profile.webp">
<meta property="og:title" content="Marcos Cuesta: Personal Site">
<meta property="og:description" content="Welcome to the personal site of Marcos Cuesta, where you can find information about my portfolio and projects." />
<meta property="og:url" content="marcoscuesta.com">
<meta name="generator" content={Astro.generator} />
<title>{title}</title>
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<ViewTransitions/>
<Analytics />
<SpeedInsights />
<script>
	const themeToggles = document.querySelectorAll("[data-theme-toggle]");

	const getTheme = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme') ||"light";
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};;

	const setTheme = (theme) =>
	  document.documentElement.setAttribute("data-theme", theme);

	window.addEventListener("DOMContentLoaded", () => setTheme(getTheme()));
	document.addEventListener("astro:after-swap", () => setTheme(getTheme()));

	themeToggles.forEach((toggle) => {
	  toggle.addEventListener("click", () => {
		const nextTheme = getTheme() === "light" ? "dark" : "light";
		localStorage.setItem("theme", nextTheme);
		setTheme(nextTheme);
	});
	toggle.setAttribute('aria-pressed', String(getTheme()));
	});
  </script>
